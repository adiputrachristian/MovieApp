//
//  ListMovieViewController.swift
//  MovieApp
//
//  Created by Christian Adiputra on 01/07/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import DesignKit
import NetworkKit

final class ListMovieViewController: UIViewController {
    
    var collectionView: UICollectionView = {
        let layout = UICollectionViewFlowLayout()
        layout.scrollDirection = .vertical
        let collectionView = UICollectionView(frame: .zero, collectionViewLayout: layout)
        collectionView.register(
            MovieCell.self, forCellWithReuseIdentifier: "MovieCell")
        collectionView.backgroundColor = .clear
        return collectionView
    }()
    
    
    // MARK: - Public properties -
    
    var presenter: ListMoviePresenterInterface!
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = UIColor.backgroundColor()
        self.title = "Discover"
        navigationController?.navigationBar.titleTextAttributes = [NSAttributedString.Key.foregroundColor: UIColor.white]
        
        setupLayout()
        addRightBarItem(isWhite: false)
    }
    
    private func setupLayout() {
        collectionView.delegate = self
        collectionView.dataSource = self
        
        view.addSubview(collectionView)
        
        collectionView.snp.makeConstraints { make in
            make.top.left.right.bottom.equalToSuperview()
        }
    }
    
    func getSize() -> CGSize {
        let width = (UIScreen.main.bounds.width-32)/3.5
        let height = width*1.8
        return CGSize(width: width, height: height)
    }
    
    
    func addRightBarItem(isWhite: Bool) {
        let view = UIView(frame: CGRect(x: 0, y: 0, width: 50, height: 44))
        var filterButton = UIButton(frame: CGRect(x: 20, y: 10, width: 32, height: 32) )
        filterButton.addTarget(self, action: #selector(showPopupFilter), for: UIControl.Event.touchUpInside)
        
        let image = IconSet.filter.value?.withTintColor(UIColor.backgroundColor())
        let tintedImage = image?.withTintColor(UIColor.white)
        filterButton.setImage((isWhite ? tintedImage : image)?.withRenderingMode(.alwaysOriginal), for: UIControl.State.normal)
        
        
        view.addSubview(filterButton)
        let rightBarItem = UIBarButtonItem(customView: view)
        
        navigationItem.rightBarButtonItem = rightBarItem
    }

    
    @objc public func showPopupFilter() {
        let vc = MovieFilterPopUp(delegate: self, title: "Filter")
        
        var movieFilter = GenreFilter(list: presenter.getListGenre(), selected: presenter.getListSelectedGenre())
        vc.filter = movieFilter
        vc.setHeight(height: 0.5)
        self.present(vc, animated: true)
    }
    
    
    
}

// MARK: - Extensions - ListMovieViewInterface

extension ListMovieViewController: ListMovieViewInterface, UIScrollViewDelegate {
    
    func showAlert(message: String) {
        let alertController = UIAlertController(title: "Error", message: message, preferredStyle: .alert)

        let okAction = UIAlertAction(title: "OK", style: .default) { (_) in
            alertController.dismiss(animated: false)
        }

        alertController.addAction(okAction)
        
        self.present(alertController, animated: true, completion: nil)
    }

    
    func scrollToTop() {
        collectionView.setContentOffset(CGPoint(x:0,y:0), animated: true)
    }
    
    func updateList() {
        collectionView.reloadData()
    }
    
    func scrollViewDidScroll(_ scrollView: UIScrollView) {
        let offsetY = scrollView.contentOffset.y
        let threshold: CGFloat = 100 // Adjust this threshold as needed
        
        if offsetY > threshold {
            navigationController?.navigationBar.tintColor = UIColor.backgroundColor()
            addRightBarItem(isWhite: false)
            navigationController?.navigationBar.titleTextAttributes = [NSAttributedString.Key.foregroundColor: UIColor.backgroundColor()]
        } else {
            navigationController?.navigationBar.tintColor = UIColor.white
            addRightBarItem(isWhite: true)
            navigationController?.navigationBar.titleTextAttributes = [NSAttributedString.Key.foregroundColor: UIColor.white]
        }
    }
    
}

// MARK: - Extensions - PopUpModalDelegate

extension ListMovieViewController: MovieFilterDelegate {
    func didTapApplyFilter(filter: [MovieGenre]) {
        presenter.setFilter(filter: filter)
    }
    
    func didTapCancel() {
        
    }
    
}

// MARK: - Extensions - Collection

extension ListMovieViewController: UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout {
    
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, insetForSectionAt section: Int) -> UIEdgeInsets {
        return UIEdgeInsets(top: 0, left: 16, bottom: 0, right: 16)
        
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        let size: CGSize = getSize()
        
        return CGSize(width: size.width, height: size.height)
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        guard presenter.getListDiscover().count != 0 else { return 0 }
        return presenter.getListDiscover().count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        
        guard let cell = collectionView.dequeueReusableCell( withReuseIdentifier: "MovieCell", for: indexPath)
                as? MovieCell
        else { return UICollectionViewCell() }
        guard let data = presenter?.getListDiscover(), data.count != 0 else { return cell }
        
        cell.updateImage(url: data[indexPath.row].posterPath)
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView,layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAt section: Int) -> CGFloat {
        return 5
    }
    
    func collectionView(_ collectionView: UICollectionView,layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -> CGFloat {
        return 5
    }
    
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        guard let data = presenter?.getListDiscover(), data.count != 0 else { return }
        presenter.goToDetailMovie(movieId: data[indexPath.row].id)
    }
    
    func collectionView(_ collectionView: UICollectionView, willDisplay cell: UICollectionViewCell, forItemAt indexPath: IndexPath) {
        if indexPath.item == presenter.getListDiscover().count - 2, presenter.page < presenter.getTotalPages() {
            presenter.addPage()
            presenter.fetchDiscoverMovies()
        }
    }
    
}


