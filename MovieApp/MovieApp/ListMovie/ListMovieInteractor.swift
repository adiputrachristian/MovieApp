//
//  ListMovieInteractor.swift
//  MovieApp
//
//  Created by Christian Adiputra on 01/07/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation
import NetworkKit


final class ListMovieInteractor {
    weak var presenter: ListMovieOutputInteractorInterface?
    let movieService: MovieServiceProtocol = MovieService()
    
    var listDiscover: [Movie] = []
    var listGenre: [MovieGenre] = []
    var selectedGenre: [MovieGenre] = []
    var totalPages: Int? = 2
    
    var filter: String = ""
}

// MARK: - Extensions -

extension ListMovieInteractor: ListMovieInteractorInterface {

    func fetchDiscoverMovies(page: Int) {
        filter = ""
        
        if selectedGenre.count != 0 {
            filter = selectedGenre.map { "\($0.id)" }.joined(separator: ",")
        }
        
        guard let totalPages = self.totalPages, page <= totalPages else { return }
        
        movieService.getListDiscover(page: page, genre: filter) { [weak self] response in
            self?.totalPages = response.totalPages
            guard let movies = response.result else { return }
            self?.listDiscover.append(contentsOf: movies)
            self?.presenter?.didSuccessGetDiscover()
        } onFailure: { error in
            self.presenter?.didFailedFetchData(message: error.localizedDescription)
        }
    }
    
    func fetchListGenre() {
        movieService.getListGenres { [weak self] response in
            self?.listGenre = response.genres
            self?.presenter?.didSuccessGetDiscover()
        } onFailure: { error in
            print("error \(error.localizedDescription)")
        }

    }
}
